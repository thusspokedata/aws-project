AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation Template to create a VPC, Subnets, Security Group, and EC2 Instances for Dev and Production'

Parameters:
  EnvironmentType:
    Description: "Specify the environment type: dev or prod"
    Type: String
    AllowedValues: 
      - dev
      - prod
    Default: dev

  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64

  InstanceType:
    Description: "EC2 instance type"
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t3.micro
      - t3.small

Resources:
  # VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentType}-VPC"

  # Public Subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs  ]
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentType}-PublicSubnet"

  # Private Subnet
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [ 1, !GetAZs  ]
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentType}-PrivateSubnet"

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentType}-InternetGateway"

  # Attach Internet Gateway to VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentType}-PublicRouteTable"

  # Public Route
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Associate Public Route Table with Public Subnet
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # Security Group
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH, HTTPS, and MySQL access based on environment"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 # Consider restricting by IP
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - !If 
          - IsDev
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            CidrIp: 0.0.0.0/0  # Open MySQL only in dev (⚠️ not recommended for prod)
          - !Ref "AWS::NoValue"
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentType}-SecurityGroup"

  # EC2 Instance
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: aws-final-key-pair
      ImageId: !Ref LatestAmiId
      SecurityGroupIds:
        - !Ref MySecurityGroup
      SubnetId: !Ref PublicSubnet
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 30
            VolumeType: gp3
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentType}-EC2Instance"

Conditions:
  IsDev: !Equals [ !Ref EnvironmentType, dev ]

Outputs:
  VPC:
    Description: "VPC ID"
    Value: !Ref MyVPC

  PublicSubnet:
    Description: "Public Subnet ID"
    Value: !Ref PublicSubnet

  PrivateSubnet:
    Description: "Private Subnet ID"
    Value: !Ref PrivateSubnet

  SecurityGroup:
    Description: "Security Group ID"
    Value: !Ref MySecurityGroup

  EC2Instance:
    Description: "EC2 Instance ID"
    Value: !Ref MyEC2Instance 