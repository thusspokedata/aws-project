AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation Template to create a VPC, Subnets, Security Group, and an EC2 Instance'

Resources:
  # VPC (Virtual Private Cloud)
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyCustomVPC

  # Public Subnet (Subnet that assigns public IPs to instances)
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true  # Automatically assign public IPs to instances
      AvailabilityZone: !Select 
        - 0
        - !GetAZs 
          Ref: AWS::Region
      Tags:
        - Key: Name
          Value: PublicSubnet

  # Private Subnet (For internal resources without public IPs)
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select 
        - 1
        - !GetAZs 
          Ref: AWS::Region
      Tags:
        - Key: Name
          Value: PrivateSubnet

  # Internet Gateway (Required for internet access in the Public Subnet)
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyInternetGateway

  # Attach Internet Gateway to VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  # Public Route Table (Manages internet routes for Public Subnet)
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  # Default Route in Public Route Table (Allows internet access)
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0  # Routes all outbound traffic to the internet
      GatewayId: !Ref InternetGateway

  # Associate Public Route Table with Public Subnet
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # Security Group for EC2 Instance (Controls inbound/outbound traffic)
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH, HTTPS, and MySQL access"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # ⚠️ SSH open to all (consider restricting by IP)
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0  # HTTPS open to all
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0  # ⚠️ MySQL open to all (⚠️ Not recommended in production)
      Tags:
        - Key: Name
          Value: MySecurityGroup

  # EC2 Instance (Virtual Machine)
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro  # Updated to t2.micro
      KeyName: aws-final-key-pair  # Set key pair for SSH access
      ImageId: !Ref LatestAmiId  # Latest Amazon Linux 2023 AMI
      SecurityGroupIds:
        - !Ref MySecurityGroup
      SubnetId: !Ref PublicSubnet  # Place instance in the public subnet
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 30
            VolumeType: gp3
      Tags:
        - Key: Name
          Value: MyEC2Instance

# Parameter to fetch the latest Amazon Linux 2023 AMI dynamically
Parameters:
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64

# Outputs to display important resources
Outputs:
  VPC:
    Description: "VPC ID"
    Value: !Ref MyVPC

  PublicSubnet:
    Description: "Public Subnet ID"
    Value: !Ref PublicSubnet

  PrivateSubnet:
    Description: "Private Subnet ID"
    Value: !Ref PrivateSubnet

  SecurityGroup:
    Description: "Security Group ID"
    Value: !Ref MySecurityGroup

  EC2Instance:
    Description: "EC2 Instance ID"
    Value: !Ref MyEC2Instance